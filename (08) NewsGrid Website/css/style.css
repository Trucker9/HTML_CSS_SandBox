:root{
    --primary-color: #c72727 ;
    --secondary-color: #f99500;
    --light-color : #f3f3f3;
    --dark-color : #333333;
    --max-width: 1100px;
}

.category{
    --sports-color : var(--secondary-color);
    --ent-color : #a66bbe;
    --tech-color : #009cff;
}

*{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

html,body{
    font-family: 'Lato', sans-serif;
    line-height: 1.5 ;
    background: var(--light-color);
}

a{
    color: #333333;
    text-decoration: none;
}
ul{
     list-style: none;
}
P{
    margin : 0.5rem;
}

img{
    /* prevent images to stretch beyond their container width*/
    width: 100%;
}
h1,h2,h3,h4,h5,h6{
     font-family: 'Staatliches', cursive;
    margin-bottom: .55rem;
    line-height: 1.3;
}

/* #################################################################### Util*/
.container{
    max-width: var(--max-width);
    margin: 0 auto;
    padding: 0 2rem;
    /*overflow: hidden;*/
}
.category {
    display: inline-block;
    color: #fff;
    font-size: 0.55rem;
    /* NEW */
    text-transform: uppercase;
    padding: 0.4rem 0.6rem;
    border-radius: 15px;
    margin-bottom: 0.5rem;
}

.category-sports { background: var(--sports-color) }
.category-ent { background: var(--ent-color) }
.category-tech { background: var(--tech-color) }

.btn {
    display: inline-block;
    border: none;
    background: var(--dark-color);
    color: #fff;
    padding: 0.5rem 1.5rem;
}
.btn-light { background: var(--light-color) }
.btn-primary { background: var(--primary-color) }
.btn-secondary { background: var(--secondary-color) }


/* it will go all the way across */
.btn-block {
    display: block;
    width: 100%;
    text-align: center;
}

.btn:hover {
    opacity: 0.9;
}

.card {
    background: #fff;
    padding: 1rem;
}

.bg-dark {
    background: var(--dark-color);
    color: #fff;
}

.bg-primary {
    background: var(--primary-color);
    color: #fff;
}

.bg-secondary {
    background: var(--secondary-color);
    color: #fff;
}

/* changing the background to a dark color made us some trouble so he did this*/
.bg-dark h1,
.bg-dark h2,
.bg-dark h3,
.bg-dark a,
.bg-primary h1,
.bg-primary h2,
.bg-primary h3,
.bg-primary a,
.bg-secondary h1,
.bg-secondary h2,
.bg-secondary h3,
.bg-secondary a {
    color: #fff;
}

.py-1 { padding: 1.5rem 0 }
.py-2 { padding: 2rem 0 }
.py-3 { padding: 3rem 0 }
.p-1 { padding: 1.5rem }
.p-2 { padding: 2rem }
.p-3 { padding: 3rem }

.l-heading {
    font-size: 3rem;
}

.list li {
    padding: .5rem 0;
    border-bottom: #555 dotted 1px;
    width: 90%;
}

.list li a:hover {
    /* even he doesn't know why it wasn't working*/
    color: var(--primary-color) !important;
}

/* ---------------------- this will split page to a sidebar and a main area */
.page-container {
    display: grid;
    /*  main aria    sidebar  */
    grid-template-columns: 5fr 2fr;
    margin: 2rem 0;
    grid-gap: 1.5rem;
}

.page-container > *:first-child {
    /* remove this to see the effect

        here we give 3 rows to the grid.
        so the red box stays on the first row
        and the article spans all the way to the bottom.
        */
    grid-row: 1 / span 3;

}

/* #################################################################### Navbar*/
#main-nav{
    background: #fff;
    position: sticky;
    top: 0;
    z-index: 2;
}

/* we should not set the #main-nav as grid
 because then the only grid item
 will be the container div*/
#main-nav .container {
    display: grid;

    padding: 1rem;
    grid-template-columns: 6fr 3fr 1fr;
    align-items: center;


}
#main-nav .logo{
    width: 180px;
}
#main-nav ul{
    /* push it to the end  */
    justify-self: end;
    /*make it horizontal*/
    display: flex;
}
#main-nav ul li a {
    padding: .75rem;
    font-weight: bold;

}

#main-nav ul li  .current {
background: var(--primary-color);
    color: white;

}
#main-nav ul li a:hover {
    background: var(--light-color);
    color : var(--dark-color)

}
#main-nav .social{
    justify-self: center;
}

#main-nav .social i {
    color: #777;
    margin-right: .5rem;
}

/*  #################################################################### Showcase */
#showcase {
    color: #fff;
    background: #333;
    padding: 2rem;
    /* Because the before sudo selector is going to be positioned absolute. and we need to set this relative to be
    able to use tblr relative to this*/
    position: relative;
}
/* some how this is going on top of the showcase area and the text. later we have
to bring the contents up*/
#showcase:before {
    content: '';
    background: url('../img/featured.jpg') no-repeat center center/cover;
    /* we are laying the image on top of the showcase area by doing this*/
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    opacity: 0.4;
}

#showcase .showcase-container {
    /* a way to split in half and using one side */
    display: grid;
    grid-template-columns: repeat(2, 1fr);

    justify-content: center;
    align-items: center;
    height: 50vh;
}
/* Bring the text up */
#showcase .showcase-content {
    z-index: 1;
}
#showcase .showcase-content p {
    margin-bottom: 1rem;
}

/*  #################################################################### Articles */

#home-articles .articles-container {
    /* putting all cards in grid ( dis-en this to see what happens) */
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    grid-gap: 1rem;
}

/* in the article-container, anything that is direct child (no matter its div or p or ...)
of the article-container, we select that, then we only choose the first one and the last one
of them. so  " example > *"  means all the direct children of example no matter what kind*/
#home-articles .articles-container > *:first-child,
#home-articles .articles-container > *:last-child {
    display: grid;
    /* image was one grid item and all the text was another grid item */
    grid-template-columns: repeat(2, 1fr);

    grid-gap: 1rem;
    align-items: center;

    /*place the start at column one and then span it 2 times */
    grid-column: 1 / span 2;
}
/* the start point is different for spanning */
#home-articles .articles-container > *:last-child {
    grid-column: 2 / span 2;
}



/*  #################################################################### Article */
#article .meta {
    display: flex;
    justify-content: space-between;
    align-items: center;
    background: #eee;
    padding: 0.5rem;
}

#article .meta .category {
    margin-top: 0.4rem;
}


/*  #################################################################### Footer */
#main-footer {
    background: var(--dark-color);
    color: #fff;
}

#main-footer img {
    /*Image was too big */
    width: 150px;
}

#main-footer a {
    color: #fff;
}

#main-footer .footer-container {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    grid-gap: 1.5rem;
}

/* copy right div*/
#main-footer .footer-container > *:last-child {
    background: #444;
    /* start at 1 and span across */
    grid-column: 1 / span 4;
    padding: .5rem;
    text-align: center;
    font-size: 0.75rem;
}

#main-footer .footer-container input[type='email'] {
    width: 90%;
    padding: 0.5rem;
    margin-bottom: 0.5rem;
}

#main-footer .footer-container input[type='submit'] {
    width: 90%;
}








